pipeline {
    agent any // { label 'dev' }  // This will run on the configured agent server

    environment {
        DJANGO_IMAGE = 'python:3.10-alpine'  // Use Python 3.9 Alpine Docker image
        DJANGO_APP_DIR = '/workspace'
    }

    stages {

        stage('Clean Workspace') {
            steps {
                echo 'Cleaning workspace...'
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                echo "Cloning the repository..."
                git branch: 'main', url: 'https://github.com/Azeemuddin3126/salmaanportfolio31.git'
            }
        }

        stage('Install Dependencies and Package Virtual Environment') {
            steps {
                echo 'Creating virtual environment, installing dependencies, and packaging the Django app with venv...'
                sh """
                    docker run --rm \
                        -v \$(pwd):${DJANGO_APP_DIR} \
                        -w ${DJANGO_APP_DIR} \
                        ${DJANGO_IMAGE} \
                        sh -c "
                           - python3 -m venv venv && \
                           - source venv/bin/activate && \
                           - pip install -r requirements.txt && \
                           - tar -czvf django-app-with-venv-${BUILD_NUMBER}.tar.gz . && \
                           - ls -l django-app-with-venv-${BUILD_NUMBER}.tar.gz"
                """
            }
        }

        stage('Archive Artifacts') {
            steps {
                echo 'Archiving the packaged artifact with virtual environment...'
                archiveArtifacts artifacts: 'django-app-with-venv-${BUILD_NUMBER}.tar.gz', allowEmptyArchive: true
            }
        }

    }
}
